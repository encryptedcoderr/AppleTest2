/**
 * This script automates editing a GitHub file by:
 * 1. Clicking the edit button.
 * 2. Deleting all text in the editor.
 * 3. Pasting clipboard content.
 * 4. Clicking the "Commit changes..." button.
 * 5. Clicking the final "Commit changes" confirmation button after a 2-second delay.
 * To use:
 * - Navigate to the GitHub file view page.
 * - Copy desired text to clipboard.
 * - Open developer console (F12), paste this script, and press Enter.
 */

// Helper function for delay
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

// Main automation logic
async function runAutomation() {
    console.log("‚ñ∂Ô∏è Starting automation...");
    console.log("Waiting 10 seconds...");
    await sleep(10000); // Initial delay.

    // 1. Click edit pencil icon.
    console.log("‚úèÔ∏è Finding edit icon...");
    const pencilIcon = document.querySelector('svg.octicon-pencil');
    if (pencilIcon) {
        const clickableParent = pencilIcon.closest('a, button, div[role="button"]');
        if (clickableParent) {
            console.log("‚úÖ Clicking edit icon...");
            clickableParent.click();
        } else {
            console.error("Error: Edit icon found, but no clickable parent.");
            return;
        }
    } else {
        console.error("Error: Edit icon not found. Ensure you're on the file view page.");
        return;
    }

    console.log("Waiting for editor...");
    await sleep(3000); // Wait for editor to load.

    // 2. Find and clear editor.
    const editorContent = document.querySelector('div.cm-content');
    if (!editorContent) {
        console.error("Error: Editor content area (.cm-content) not found.");
        return;
    }
    console.log("‚úÖ Clearing editor...");
    const range = document.createRange();
    range.selectNodeContents(editorContent);
    const selection = window.getSelection();
    selection.removeAllRanges();
    selection.addRange(range);
    editorContent.innerHTML = ''; // Delete content.

    console.log("‚úÖ Deleted. Pasting from clipboard...");

    // 3. Paste clipboard content.
    try {
        const clipboardText = await navigator.clipboard.readText();
        if (clipboardText) {
            console.log("‚úÖ Pasting clipboard content...");
            editorContent.innerText = clipboardText;
        } else {
            console.warn("Warning: Clipboard empty.");
        }
    } catch (err) {
        console.error("Error: Clipboard access failed. Check permissions.", err);
        return;
    }

    console.log("Waiting 3 seconds before commit...");
    await sleep(3000); // 3-second delay before commit.

    // 4. Click "Commit changes..." button.
    console.log("üîç Finding 'Commit changes...' button...");
    const allButtons = document.querySelectorAll('button');
    let commitButton = null;
    for (const button of allButtons) {
        if (button.textContent.trim().includes('Commit changes...')) {
            commitButton = button;
            break;
        }
    }

    if (commitButton) {
        console.log("‚úÖ Clicking 'Commit changes...'...");
        commitButton.click();

        // --- NEW STEP ---
        // Wait for the commit confirmation dialog to appear.
        console.log("‚è≥ Waiting 2 seconds for confirmation dialog...");
        await sleep(2000);

        // 5. Click the final "Commit changes" button in the dialog.
        console.log("üîç Finding final 'Commit changes' button...");
        const finalButtons = document.querySelectorAll('button');
        let confirmButton = null;
        for (const button of finalButtons) {
            // Use an exact text match to distinguish from the first button.
            if (button.textContent.trim() === 'Commit changes') {
                confirmButton = button;
                break;
            }
        }

        if (confirmButton) {
            console.log("‚úÖ Clicking final 'Commit changes' button...");
            confirmButton.click();
            console.log("üéâ Automation complete! Commit has been confirmed.");
        } else {
            console.error("Error: Could not find the final 'Commit changes' button. The dialog may not have appeared or the UI may have changed.");
        }
        // --- END OF NEW STEP ---

    } else {
        console.error("Error: Could not find the 'Commit changes...' button. The script may need to be updated if the GitHub UI has changed.");
        return;
    }
}

// Run the script
runAutomation();
