name: Generate, Play, and Debug Audio
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-generate-and-debug:
    runs-on: macos-latest

    steps:
      # Clone the repository
      - name: Clone repository
        run: |
          echo "Cloning repository..."
          git clone https://github.com/encryptedcoderr/AppleTest/
          
      # Navigate and list directory contents
      - name: Navigate and list directory contents
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: ls -l

      # Patch encodeme.mm for 10-second M4A
      - name: Patch encodeme.mm
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Patching encodeme.mm..."
          cat > encodeme.mm << 'EOF'
          @import AVFAudio;
          @import AudioToolbox;
          #include <cmath>
          int main() {
              uint32_t channelNum = 1;
              AVAudioFormat* formatIn = [[AVAudioFormat alloc] initStandardFormatWithSampleRate:44100
                                                                               channels:channelNum];
              AVAudioChannelLayout* channelLayout =
                  [AVAudioChannelLayout layoutWithLayoutTag:kAudioChannelLayoutTag_Mono];
              const int sampleRate = 44100;
              const int durationSeconds = 10;
              const int totalSamples = sampleRate * durationSeconds;
              const int samplesPerBuffer = 1024;
              float* audioBuffer = (float*)malloc(samplesPerBuffer * sizeof(float));
              
              AudioStreamBasicDescription m4aDescription{
                  .mSampleRate = 44100,
                  .mFormatID = kAudioFormatMPEG4AAC,
                  .mFramesPerPacket = 1024,
                  .mChannelsPerFrame = channelNum,
              };
              NSURL* m4aUrl = [NSURL fileURLWithPath:@"output.m4a"];
              ExtAudioFileRef m4aFile = nullptr;
              OSStatus status = ExtAudioFileCreateWithURL((__bridge CFURLRef)m4aUrl, kAudioFileM4AType,
                                                          &m4aDescription, channelLayout.layout,
                                                          kAudioFileFlags_EraseFile, &m4aFile);
              if (status) { return 1; }
              
              ExtAudioFileSetProperty(m4aFile, kExtAudioFileProperty_ClientDataFormat,
                                      sizeof(AudioStreamBasicDescription), formatIn.streamDescription);

              for (int i = 0; i < totalSamples; i += samplesPerBuffer) {
                  int samplesToWrite = (i + samplesPerBuffer <= totalSamples) ? samplesPerBuffer : (totalSamples - i);
                  for (int j = 0; j < samplesToWrite; j++) {
                      audioBuffer[j] = sin(2 * M_PI * 440 * (i + j) / sampleRate) * 0.5f;
                  }
                  AudioBufferList audioBufferList{ .mNumberBuffers = 1, .mBuffers = {{ .mNumberChannels = 1, .mDataByteSize = static_cast<UInt32>(samplesToWrite * sizeof(float)), .mData = audioBuffer, },}, };
                  ExtAudioFileWrite(m4aFile, samplesToWrite, &audioBufferList);
              }
              
              free(audioBuffer);
              ExtAudioFileDispose(m4aFile);
              return 0;
          }
          EOF

      # Set up Xcode
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      # Compile encodeme.mm
      - name: Compile encodeme.mm
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Compiling..."
          clang++ -g -Os -std=c++2b -fmodules -fcxx-modules -fobjc-arc -arch arm64 \
            -isysroot $(xcrun --sdk macosx --show-sdk-path) \
            -framework AVFAudio -framework AudioToolbox \
            encodeme.mm -o encodeme
          if [ $? -ne 0 ]; then echo "Compilation failed."; exit 1; fi

      # Generate M4A and convert to MP3
      - name: Generate Audio Files
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          chmod +x encodeme && ./encodeme
          brew install ffmpeg
          ffmpeg -i output.m4a -c:a mp3 -b:a 128k -ac 1 output.mp3
          ls -lh output.m4a output.mp3

      # Play, Track, and Debug Processes
      - name: Play, Track, and Debug Audio Processes
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          LOG_FILE="debug_log.txt"
          echo "--- Playback and Debug Log ---" > $LOG_FILE
          echo "Timestamp: $(date)" >> $LOG_FILE
          
          echo "Starting audio playback in background..."
          afplay output.m4a &
          M4A_PID=$!
          afplay output.mp3 &
          MP3_PID=$!
          
          echo "Started M4A playback with PID: $M4A_PID" >> $LOG_FILE
          echo "Started MP3 playback with PID: $MP3_PID" >> $LOG_FILE
          
          # Allow a moment for processes to initialize before attaching debugger
          sleep 2
          
          echo "--- Attaching LLDB to M4A Process (PID: $M4A_PID) ---" >> $LOG_FILE
          lldb -p $M4A_PID --batch -o 'bt' -o 'detach' -o 'quit' >> $LOG_FILE 2>&1 || echo "Could not attach to M4A process. It may have already finished." >> $LOG_FILE
          
          echo "--- Attaching LLDB to MP3 Process (PID: $MP3_PID) ---" >> $LOG_FILE
          lldb -p $MP3_PID --batch -o 'bt' -o 'detach' -o 'quit' >> $LOG_FILE 2>&1 || echo "Could not attach to MP3 process. It may have already finished." >> $LOG_FILE
          
          echo "--- End of Log ---" >> $LOG_FILE
          
          echo "âœ… Debug log created. Displaying contents:"
          cat $LOG_FILE

      # Upload all artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: audio-and-debug-artifacts
          path: |
            AppleTest/apple-positional-audio-codec-invalid-header-main/output.m4a
            AppleTest/apple-positional-audio-codec-invalid-header-main/output.mp3
            AppleTest/apple-positional-audio-codec-invalid-header-main/debug_log.txt
          retention-days: 7
          if-no-files-found: error
